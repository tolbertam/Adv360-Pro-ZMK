
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
       &kp ESC     &kp N1    &kp N2    &kp N3          &kp N4  &kp N5                 &kp HOME                                                                                     &kp END  &kp N6     &kp N7     &kp N8    &kp N9      &kp N0  &kp GRAVE
       &kp TAB      &kp Q     &kp W     &kp E           &kp R   &kp T             &kp LG(PLUS)                                                                                   &kp PG_UP   &kp Y      &kp U      &kp I     &kp O       &kp P   &kp BSLH
 &mt LCTRL ESC      &kp A     &kp S   &lt 2 D         &lt 3 F   &kp G            &kp LG(MINUS)  &kp LG(NUMBER_0)                &kp LALT                    &kp LGUI  &kp RCTRL  &kp PG_DN   &kp H      &kp J      &kp K     &kp L  &lt 1 SEMI    &kp SQT
     &kp LSHFT      &kp Z     &kp X     &kp C           &kp V   &kp B                    &none             &none              &bl BL_TOG   &none   &none  &bl BL_INC      &none      &none   &kp N      &kp M  &kp COMMA   &kp DOT    &kp FSLH  &kp RSHFT
         &to 4  &kp GRAVE  &kp LALT  &kp LALT  &mt LGUI EQUAL                        &kp SPACE          &kp BSPC  &rgb_ug RGB_MEFS_CMD 5                  &bl BL_DEC   &kp BSPC  &kp ENTER          &kp LC(R)  &kp LC(D)  &kp LBKT    &kp RBKT      &mo 5
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL        &kp N1     &kp N2                &kp N3                 &kp N4     &kp N5                   &trans                                                           &mo 5    &kp N6       &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB  &kp KP_MINUS  &kp UNDER        &kp LEFT_BRACE        &kp RIGHT_BRACE   &kp PIPE            &macro_braces                                                   &macro_quotes    &kp AT        &kp KP_N7     &kp KP_N8      &kp KP_N9  &kp KP_MULTIPLY   &kp BSLH
   &kp ESC        &kp LT     &kp GT  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE            &macro_parens  &trans  &trans                  &trans  &trans  &macro_dquotes  &kp HASH        &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS    &kp SQT
 &kp LSHFT     &kp PRCNT  &kp CARET      &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp TILDE                    &none   &none  &trans   &none   &none  &trans   &none           &none  &kp AMPS        &kp KP_N1     &kp KP_N2      &kp KP_N3    &kp BACKSLASH  &kp RSHFT
    &trans        &trans     &trans                &trans                 &trans                              &trans  &trans  &trans                  &trans  &trans          &trans            &kp KP_MULTIPLY    &kp KP_DOT      &kp KP_N0     &kp KP_EQUAL     &trans
            >;
        };

        layer_vim {
            bindings = <
 &trans    &trans    &trans  &trans    &trans  &trans            &trans                                                  &trans    &trans    &trans  &trans     &trans  &trans  &trans
 &trans  &kp DLLR  &kp HOME  &trans   &kp END   &kp B            &trans                                                  &trans    &trans    &trans  &trans     &trans  &trans  &trans
 &trans    &trans   &kp DEL  &trans  &kp BSPC  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
 &trans    &kp N0   &kp DEL  &trans  &kp BSPC   &kp W            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans  &trans     &trans  &trans  &trans
 &trans    &trans    &trans  &trans    &trans                    &trans  &trans  &trans                  &trans  &trans  &trans              &trans  &trans     &trans  &trans  &trans
            >;
        };

        layer_punctuation {
            bindings = <
 &trans     &trans    &trans         &trans  &trans  &trans            &trans                                                  &trans     &trans            &trans             &trans     &trans         &trans  &trans
 &trans   &kp DLLR  &kp EXCL   &kp QUESTION  &trans   &kp B            &trans                                                  &trans     &trans            &trans             &trans     &trans  &kp BACKSLASH  &trans
 &trans  &kp COMMA   &kp DOT      &kp SLASH  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &kp EQUAL  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp COLON  &kp SEMICOLON  &trans
 &trans     &kp N0    &trans  &kp BACKSLASH  &trans   &kp W            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans            &trans             &trans     &trans      &kp SLASH  &trans
 &trans     &trans    &trans         &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans                       &trans             &trans     &trans         &trans  &trans
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6             &none                                                   &none  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans             &none                                                   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans                  &trans  &trans   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans   &none   &none  &trans   &none   &none  &trans  &trans  &trans   &trans   &trans   &trans
  &to 0  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none         &none         &none         &none         &none                       &bootloader                                                                         &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none                  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none                             &none       &none   &none   &none   &none       &none       &none                   &none         &none         &none         &none         &none         &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC                                 &rgb_ug RGB_TOG  &bl BL_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

    };
};
